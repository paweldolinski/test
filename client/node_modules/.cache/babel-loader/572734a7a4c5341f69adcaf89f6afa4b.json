{"ast":null,"code":"var _jsxFileName = \"/Users/pawel/projects/react/mern/client/src/components/register/Register.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { RecipesContext } from \"../../context/RecipesContext\";\n\nconst Signup = () => {\n  const [newUser, setNewUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [success, setSuccess] = useState(false);\n  const {\n    setMessage\n  } = useContext(UserContext);\n  const {\n    setIsBackground\n  } = useContext(RecipesContext);\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    const pattern = \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\";\n\n    if (!newUser.password.match(pattern)) {\n      setMessage(\"Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter and one number and at least one special character,\");\n      return;\n    }\n\n    if (newUser.password !== newUser.confirmPassword) {\n      setMessage(\"Passwords dont match!\");\n      return;\n    } // \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$\"\n\n\n    const response = fetch(\"http://localhost:4000/user/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newUser.name,\n        email: newUser.email,\n        password: newUser.password\n      })\n    });\n    const data = await response;\n    const json = await data.json();\n\n    if (data.status === 200) {\n      setSuccess(true);\n      setMessage(json.message);\n    } else {\n      setSuccess(false);\n      setMessage(json.message);\n    }\n  };\n\n  const onChangeHandler = e => {\n    setNewUser({ ...newUser,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    setMessage(\"Register new user\");\n    setIsBackground(true);\n  }, []);\n\n  if (success) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"register-form\",\n      onSubmit: onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"SIGNUP\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"register-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"email\",\n      name: \"email\",\n      onChange: onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"register-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      onChange: onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"register-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      onChange: onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"register-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Confirm password\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"confirm password\",\n      name: \"confirmPassword\",\n      onChange: onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Register\"));\n  }\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/pawel/projects/react/mern/client/src/components/register/Register.js"],"names":["React","useState","useContext","useEffect","Redirect","UserContext","RecipesContext","Signup","newUser","setNewUser","email","name","password","confirmPassword","success","setSuccess","setMessage","setIsBackground","onSubmitHandler","e","preventDefault","pattern","match","response","fetch","method","headers","body","JSON","stringify","data","json","status","message","onChangeHandler","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { RecipesContext } from \"../../context/RecipesContext\";\n\nconst Signup = () => {\n  const [newUser, setNewUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [success, setSuccess] = useState(false);\n  const { setMessage } = useContext(UserContext);\n  const { setIsBackground } = useContext(RecipesContext);\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault();\n    const pattern =\n      \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\";\n    if (!newUser.password.match(pattern)) {\n      setMessage(\n        \"Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter and one number and at least one special character,\"\n      );\n      return;\n    }\n    if (newUser.password !== newUser.confirmPassword) {\n      setMessage(\"Passwords dont match!\");\n      return;\n    }\n\n    // \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$\"\n\n    const response = fetch(\"http://localhost:4000/user/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: newUser.name,\n        email: newUser.email,\n        password: newUser.password,\n      }),\n    });\n    const data = await response;\n    const json = await data.json();\n    if (data.status === 200) {\n      setSuccess(true);\n      setMessage(json.message);\n    } else {\n      setSuccess(false);\n      setMessage(json.message);\n    }\n  };\n\n  const onChangeHandler = (e) => {\n    setNewUser({\n      ...newUser,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    setMessage(\"Register new user\");\n    setIsBackground(true);\n  }, []);\n\n  if (success) {\n    return <Redirect to=\"/login\" />;\n  } else {\n    return (\n      <form className=\"register-form\" onSubmit={onSubmitHandler}>\n        <h2>SIGNUP</h2>\n        <label className=\"register-form__label\">\n          Email\n          <input\n            type=\"email\"\n            placeholder=\"email\"\n            name=\"email\"\n            onChange={onChangeHandler}\n          />\n        </label>\n        <label className=\"register-form__label\">\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"name\"\n            name=\"name\"\n            onChange={onChangeHandler}\n          />\n        </label>\n        <label className=\"register-form__label\">\n          Password\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={onChangeHandler}\n          />\n        </label>\n        <label className=\"register-form__label\">\n          Confirm password\n          <input\n            type=\"password\"\n            placeholder=\"confirm password\"\n            name=\"confirmPassword\"\n            onChange={onChangeHandler}\n          />\n        </label>\n        <button>Register</button>\n      </form>\n    );\n  }\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}