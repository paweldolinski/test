{"ast":null,"code":"var _jsxFileName = \"/Users/pawel/projects/react/mern/client/src/context/RecipesContext.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nexport const RecipesContext = createContext();\n\nconst RecipesProvider = props => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [likeArr, setLikeArr] = useState([]);\n  const [isModal, setIsModal] = useState(false);\n  const [modalObj, setModalObj] = useState({\n    label: \"\",\n    healthLabels: \"\",\n    ingredients: \"\",\n    yield: \"\",\n    totalNutrients: \"\"\n  });\n  const [isBackground, setIsBackground] = useState(true);\n  const [isFirstSearch, setIsFirstSearch] = useState(false);\n\n  const onChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setQuery(search);\n    setIsFirstSearch(true);\n  };\n\n  const deleteLike = obj => {\n    setLikeArr(likeArr.filter(item => item.id !== obj.id));\n    obj.bookmarked = false;\n  };\n\n  const sortByProteins = () => {\n    setData(data.slice().sort((a, b) => a.proteins < b.proteins ? 1 : -1));\n  };\n\n  const sortByCarbs = () => {\n    setData(data.slice().sort((a, b) => a.carbs < b.carbs ? 1 : -1));\n  };\n\n  const sortByFat = () => {\n    setData(data.slice().sort((a, b) => a.fat < b.fat ? 1 : -1));\n  };\n\n  const openModal = id => {\n    const item = data.filter(recipe => recipe.id === id);\n    const {\n      label,\n      totalNutrients,\n      healthLabels,\n      ingredientLines\n    } = item[0].recipe;\n    setModalObj({\n      label,\n      totalNutrients,\n      healthLabels,\n      ingredients: ingredientLines,\n      yield: item[0].recipe.yield\n    });\n    document.body.classList.add(\"modal-open\");\n    setIsModal(true);\n  };\n\n  const closeModal = e => {\n    if (e.target.getAttribute(\"data-type\") !== \"close\") return;\n    document.body.classList.remove(\"modal-open\");\n    setIsModal(false);\n  };\n\n  const getRecipes = async () => {\n    const id = process.env.REACT_APP_API_ID;\n    const key = process.env.REACT_APP_API_KEY;\n    console.log(\"-------\", process.env.REACT_APP_API_ID);\n    const searchUrl = `https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=${query}&app_id=${id}&app_key=${key}`;\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(searchUrl);\n      const json = await response.json();\n      const {\n        hits\n      } = json;\n\n      if (response.status === 200) {\n        setData(hits);\n        setIsLoading(false);\n        setIsBackground(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    if (query) getRecipes();\n  }, [query]);\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: {\n      data,\n      search,\n      query,\n      likeArr,\n      isModal,\n      modalObj,\n      isLoading,\n      isFirstSearch,\n      isBackground,\n      onChange: onChange,\n      onSubmit: onSubmit,\n      deleteLike: deleteLike,\n      openModal: openModal,\n      closeModal: closeModal,\n      sortByProteins: sortByProteins,\n      sortByCarbs: sortByCarbs,\n      sortByFat: sortByFat,\n      setIsFirstSearch: setIsFirstSearch,\n      setIsBackground\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default RecipesProvider;","map":{"version":3,"sources":["/Users/pawel/projects/react/mern/client/src/context/RecipesContext.js"],"names":["React","createContext","useState","useEffect","RecipesContext","RecipesProvider","props","data","setData","isLoading","setIsLoading","search","setSearch","query","setQuery","likeArr","setLikeArr","isModal","setIsModal","modalObj","setModalObj","label","healthLabels","ingredients","yield","totalNutrients","isBackground","setIsBackground","isFirstSearch","setIsFirstSearch","onChange","e","target","value","onSubmit","preventDefault","deleteLike","obj","filter","item","id","bookmarked","sortByProteins","slice","sort","a","b","proteins","sortByCarbs","carbs","sortByFat","fat","openModal","recipe","ingredientLines","document","body","classList","add","closeModal","getAttribute","remove","getRecipes","process","env","REACT_APP_API_ID","key","REACT_APP_API_KEY","console","log","searchUrl","response","fetch","json","hits","status","err","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const RecipesContext = createContext();\n\nconst RecipesProvider = (props) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [likeArr, setLikeArr] = useState([]);\n  const [isModal, setIsModal] = useState(false);\n  const [modalObj, setModalObj] = useState({\n    label: \"\",\n    healthLabels: \"\",\n    ingredients: \"\",\n    yield: \"\",\n    totalNutrients: \"\",\n  });\n  const [isBackground, setIsBackground] = useState(true);\n  const [isFirstSearch, setIsFirstSearch] = useState(false);\n\n  const onChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setIsFirstSearch(true);\n  };\n\n  const deleteLike = (obj) => {\n    setLikeArr(likeArr.filter((item) => item.id !== obj.id));\n    obj.bookmarked = false;\n  };\n\n  const sortByProteins = () => {\n    setData(data.slice().sort((a, b) => (a.proteins < b.proteins ? 1 : -1)));\n  };\n\n  const sortByCarbs = () => {\n    setData(data.slice().sort((a, b) => (a.carbs < b.carbs ? 1 : -1)));\n  };\n\n  const sortByFat = () => {\n    setData(data.slice().sort((a, b) => (a.fat < b.fat ? 1 : -1)));\n  };\n\n  const openModal = (id) => {\n    const item = data.filter((recipe) => recipe.id === id);\n    const {\n      label,\n      totalNutrients,\n      healthLabels,\n      ingredientLines,\n    } = item[0].recipe;\n\n    setModalObj({\n      label,\n      totalNutrients,\n      healthLabels,\n      ingredients: ingredientLines,\n      yield: item[0].recipe.yield,\n    });\n    document.body.classList.add(\"modal-open\");\n    setIsModal(true);\n  };\n\n  const closeModal = (e) => {\n    if (e.target.getAttribute(\"data-type\") !== \"close\") return;\n    document.body.classList.remove(\"modal-open\");\n    setIsModal(false);\n  };\n\n  const getRecipes = async () => {\n    const id = process.env.REACT_APP_API_ID;\n    const key = process.env.REACT_APP_API_KEY;\n    console.log(\"-------\", process.env.REACT_APP_API_ID);\n    const searchUrl = `https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=${query}&app_id=${id}&app_key=${key}`;\n    setIsLoading(true);\n    try {\n      const response = await fetch(searchUrl);\n      const json = await response.json();\n      const { hits } = json;\n      if (response.status === 200) {\n        setData(hits);\n        setIsLoading(false);\n        setIsBackground(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    if (query) getRecipes();\n  }, [query]);\n\n  return (\n    <RecipesContext.Provider\n      value={{\n        data,\n        search,\n        query,\n        likeArr,\n        isModal,\n        modalObj,\n        isLoading,\n        isFirstSearch,\n        isBackground,\n        onChange: onChange,\n        onSubmit: onSubmit,\n        deleteLike: deleteLike,\n        openModal: openModal,\n        closeModal: closeModal,\n        sortByProteins: sortByProteins,\n        sortByCarbs: sortByCarbs,\n        sortByFat: sortByFat,\n        setIsFirstSearch: setIsFirstSearch,\n        setIsBackground,\n      }}\n    >\n      {props.children}\n    </RecipesContext.Provider>\n  );\n};\n\nexport default RecipesProvider;\n"]},"metadata":{},"sourceType":"module"}